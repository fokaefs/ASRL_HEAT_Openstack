heat_template_version: 2014-10-16
description: Simple three-tier web architecture
parameters:
  image:
    type: string
    description: Image used for VMs
  key:
    type: string
    description: SSH key to connect to VMs
  web_flavor:
    type: string
    description: Size (flavor) of web servers
    default: m1.small
  db_flavor:
    type: string
    description: Size (flavor) of database servers
    default: m1.large
  network:
    type: string
    description: Network used by the servers
  web_cluster.size:
    type: number
    description: Number of web servers
resources:
  db:
    type: OS::Nova::Server
    properties:
      flavor:
        get_param: db_flavor
      image:
        get_param: image
      key_name:
        get_param: key
      config_drive: true
      metadata:
        type: database
      user_data_format: RAW
      user_data: |
        #!/bin/bash -v
        apt-get update
        debconf-set-selections <<< "mysql-server mysql-server/root_password password root"
        debconf-set-selections <<< "mysql-server mysql-server/root_password_again password root"
        apt-get install -y mysql-server
        wget https://raw.githubusercontent.com/fokaefs/ASRL_HEAT_Openstack/master/HEATTemplates/templates/mySqlScript.sql
        mysql -uroot -proot < mySqlScript.sql
        rm -rf mySqlScript.sql
        db_host=$(curl http://169.254.169.254/latest/meta-data/local-ipv4)
        echo $db_host
        wget http://ceras.eso.yorku.ca/etavirp/mysql/my.cnf -O /etc/mysql/my.cnf
        sed -i "/bind-address/c\bind-address = $db_host" /etc/mysql/my.cnf
        service mysql restart
  web_cluster:
    type: OS::Heat::ResourceGroup
    properties:
      count:
        get_param: web_cluster.size
      resource_def:
        type: OS::Nova::Server
        properties:
          name: web_server_%index%
          flavor:
            get_param: web_flavor
          image:
            get_param: image
          key_name:
            get_param: key
          config_drive: true
          metadata:
            metering.stack:
              get_param: OS::stack_id
          user_data:
            str_replace:
              template: |
                #!/bin/bash -v
                apt-get update
                apt-get install -y dos2unix
                apt-get install -y tomcat7
                iptables -t nat -A PREROUTING -p tcp --dport 80 -j REDIRECT --to-port 8080
                wget http://ceras.eso.yorku.ca/etavirp/tomcat/DatabaseOperations.war -O /var/lib/tomcat7/webapps/DatabaseOperations.war

                /etc/init.d/tomcat7 restart
                dos2unix /var/lib/tomcat7/webapps/DatabaseOperations/META-INF/context.xml
                sed -i "/password/c\password=\"root\"" /var/lib/tomcat7/webapps/DatabaseOperations/META-INF/context.xml
                sed -i "/url/c\url=\"jdbc:mysql:\\/\\/$db_host:3306\\/SimpleDatabase\"" /var/lib/tomcat7/webapps/DatabaseOperations/META-INF/context.xml
                wget http://ceras.eso.yorku.ca/etavirp/tomcat/mysql-connector-java-5.1.10-bin.jar -O /var/lib/tomcat7/webapps/DatabaseOperations/WEB-INF/lib/mysql-connector-java-5.1.10-bin.jar
                service tomcat7 restart
              params:
                $db_host:
                  get_attr:
                  - db
                  - networks
                  - get_param: network
                  - 0
          user_data_format: RAW
#  port:
#    type: OS::Neutron::Port
#    properties:
#      network:
#        get_param: network

  lb:
    type: OS::Nova::Server
    properties:
      flavor:
        get_param: web_flavor
      image:
        get_param: image
      key_name:
        get_param: key
      metadata:
        servers:
          get_attr:
          - web_cluster
          - attributes
          - networks
          - get_param: network
          - 0
      config_drive: true
#      networks:
#      - port: { get_resource: port }
      user_data: |
        #!/bin/bash -v

        # install dependencies
        sudo apt-get update
        sudo apt-get -y install apache2 python

        cp /etc/apache2/mods-available/proxy.conf /etc/apache2/mods-available/proxy_bkp.conf
        cp /etc/apache2/mods-available/proxy_balancer.conf /etc/apache2/mods-available/proxy_balancer_bkp.conf

        echo "<IfModule mod_proxy.c>
        ProxyRequests Off

        <Proxy *>
          AddDefaultCharset off
          Order deny,allow
          Allow from all
        </Proxy>
        ProxyVia On
        </IfModule>" | tee /etc/apache2/mods-available/proxy.conf


        a2enmod proxy
        a2enmod proxy_balancer
        a2enmod proxy_http
        a2enmod proxy_ajp
        a2enmod proxy_connect

        service apache2 start

        wget https://raw.githubusercontent.com/fokaefs/ASRL_HEAT_Openstack/master/HEATTemplates/templates/update.py -O /etc/apache2/update.py

        # add a cron job to monitor the metadata and update haproxy
        crontab -l >_crontab || true
        echo "* * * * * curl -s http://169.254.169.254/openstack/latest/meta_data.json | python /etc/apache2/update.py | /usr/bin/logger -t apache2_update" >>_crontab
        crontab <_crontab
        rm _crontab
      user_data_format: RAW
#  floating_ip:
#    type: OS::Neutron::FloatingIP
#    properties:
#      floating_network: { get_param: public_network }

#  floating_ip_assoc:
#    type: OS::Neutron::FloatingIPAssociation
#    properties:
#      floatingip_id: { get_resource: floating_ip }
#      port_id:
#        get_resource: port

outputs:
  balancer.ip:
    description: Load balancer IP.
    value:
      get_attr:
      - lb
      - networks
      - get_param: network
      - 0
  balancer.id:
    description: Load balancer ID.
    value:
      get_resource: lb
  database.ip:
    description: Database IP.
    value:
      get_attr:
      - db
      - networks
      - get_param: network
      - 0
  database.id:
    description: Database ID.
    value:
      get_resource: db
  web_cluster.ip:
    description: Worker IPs.
    value:
      get_attr:
        - web_cluster
        - attributes
        - networks
        - get_param: network
        - 0
  web_cluster.id:
    description: Worker IDs.
    value:
      get_attr:
      - web_cluster
      - refs
        